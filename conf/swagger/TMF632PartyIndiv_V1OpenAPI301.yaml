openapi: 3.0.1
info:
  title: API Party Individual in Giga
  description: "## TMF API Reference : TMF 632 - Party Use inside Giga Hub\n\n\n###\
    \ Release : 19.0 \nThis Version is based on TMF632 Version 4.0.0\n\nThe party\
    \ API provides standardized mechanism for party management such as creation, update,\
    \ retrieval and deletion. Party Individual  has any kind of relation inside Fibre\
    \ NetCo or InfCo. Party is created to record individual information. For example,\
    \ within the context of a Creating non Connected Orders, Party API allows creation\
    \ of the Customer as an individual for later use and processing. Consumer of that\
    \ API should reference on an Individual with the ID of the Individual. This is\
    \ the Key that Consumer has to store in theire Modell.\n\nAttention: Its neccesary\
    \ in Case of using POST Individual, that complete JSON (TAGS) has to be delivered.\
    \ Is there one Tag missing, API will answere with Bad Request in Response.\n\n\
    ### Resources\n- Individual\n\nParty API performs the following operations :\n\
    - Retrieve an individual\n\n\
    - Create a new individual\n- Update an existing individual\n- Delete an existing\
    \ individual"
  version: 1.0.0
servers:
- url: http://localhost:5000/party-management-individual/
tags:
- name: individual
paths:
  /individual:
    post:
      tags:
      - individual
      summary: Creates a Individual
      description: This operation creates a Individual entity. All parameters must
        be Party of JSON Body. Empty String Values are declared with "".
      operationId: createIndividual
      requestBody:
        description: The Individual to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/Individual_Create'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Individual'
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - OauthSecurity:
        - party:individual:full
        - party:individual:write
        - giga:cga:all-area-access
      x-codegen-request-body-name: individual
  /individual/{id}:
    get:
      tags:
      - individual
      summary: Retrieves a Individual by ID
      description: This operation retrieves a Individual entity. Attribute selection
        is enabled for all first level attributes.
      operationId: retrieveIndividual
      parameters:
      - name: id
        in: path
        description: Identifier of the Individual
        required: true
        schema:
          type: string
      responses:
        200:
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Individual'
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - OauthSecurity:
        - party:individual:full
        - party:individual:read
        - party:individual:write
        - giga:cga:all-area-access
    delete:
      tags:
      - individual
      summary: Deletes a Individual
      description: This operation deletes a Individual entity.
      operationId: deleteIndividual
      parameters:
      - name: id
        in: path
        description: Identifier of the Individual
        required: true
        schema:
          type: string
      responses:
        204:
          description: Deleted
          content: {}
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - OauthSecurity:
        - party:individual:full
        - party:individual:delete
        - giga:cga:all-area-access
    patch:
      tags:
      - individual
      summary: Updates partially a Individual.
      description: This operation updates partially a Individual entity. Consumer
        can decide which Value will be send in Body.
      operationId: patchIndividual
      parameters:
      - name: id
        in: path
        description: Identifier of the Individual
        required: true
        schema:
          type: string
      requestBody:
        description: The Individual to be updated
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/Individual_Update'
        required: true
      responses:
        200:
          description: Updated
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Individual'
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - OauthSecurity:
        - party:individual:full
        - party:individual:write
        - giga:cga:all-area-access
      x-codegen-request-body-name: individual
components:
  schemas:
    Any:
      type: object
    Characteristic:
      required:
      - name
      - value
      type: object
      properties:
        name:
          type: string
          description: Name of the characteristic
        valueType:
          type: string
          description: Data type of the value of the characteristic
        value:
          $ref: '#/components/schemas/Any'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: Describes a given characteristic of an object or entity through
        a name/value pair.
    ContactMedium:
      type: object
      properties:
        mediumType:
          type: string
          description: 'Type of the contact medium, such as: email address, telephone
            number, postal address'
        preferred:
          type: boolean
          description: If true, indicates that is the preferred contact medium
        characteristic:
          $ref: '#/components/schemas/MediumCharacteristic'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: Indicates the contact medium that could be used to contact the
        party.
    EntityRef:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of a related entity.
        href:
          type: string
          description: Reference of the related entity.
        name:
          type: string
          description: Name of the related entity.
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Entity reference schema to be use for all entityRef class.
    ExternalReference:
      type: object
      properties:
        externalReferenceType:
          type: string
          description: Type of the external reference
        name:
          type: string
          description: External reference name
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: External reference of the individual or reference in other system
    Individual:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the organization
        href:
          type: string
          description: Hyperlink to access the organization
        aristocraticTitle:
          type: string
          description: e.g. Baron, Graf, Earl,…
        birthDate:
          type: string
          description: Birth date
          format: date-time
        countryOfBirth:
          type: string
          description: Country where the individual was born
        deathDate:
          type: string
          description: Date of death
          format: date-time
        familyName:
          type: string
          description: Contains the non-chosen or inherited name. Also known as last
            name in the Western context
        familyNamePrefix:
          type: string
          description: Family name prefix
        formattedName:
          type: string
          description: A fully formatted name in one string with all of its pieces
            in their proper place and all of the necessary punctuation. Useful for
            specific contexts (Chinese, Japanese, Korean,…)
        fullName:
          type: string
          description: Full name flatten (first, middle, and last names)
        gender:
          type: string
          description: Gender
        generation:
          type: string
          description: e.g.. Sr, Jr, III (the third),…
        givenName:
          type: string
          description: First name of the individual
        legalName:
          type: string
          description: Legal name or birth name (name one has for official purposes)
        location:
          type: string
          description: Temporary current location od the individual (may be used if
            the individual has approved its sharing)
        maritalStatus:
          type: string
          description: Marital status (married, divorced, widow ...)
        middleName:
          type: string
          description: Middles name or initial
        nationality:
          type: string
          description: Nationality
        placeOfBirth:
          type: string
          description: Reference to the place where the individual was born
        preferredGivenName:
          type: string
          description: 'Contains the chosen name by which the individual prefers to
            be addressed. Note: This name may be a name other than a given name, such
            as a nickname'
        title:
          type: string
          description: Useful for titles (aristocratic, social,...) Pr, Dr, Sir, ...
        contactMedium:
          type: array
          items:
            $ref: '#/components/schemas/ContactMedium'
        externalReference:
          type: array
          items:
            $ref: '#/components/schemas/ExternalReference'
        otherName:
          type: array
          items:
            $ref: '#/components/schemas/OtherNameIndividual'
        partyCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/Characteristic'
        relatedParty:
          type: array
          items:
            $ref: '#/components/schemas/RelatedParty'
        skill:
          type: array
          items:
            $ref: '#/components/schemas/Skill'
        status:
          $ref: '#/components/schemas/IndividualStateType'
      description: Individual represents a single human being (a man, woman or child).
        The individual can be a customer, an employee or any other person that the
        organization needs to store information about.
    Individual_Create:
      required:
      - familyName
      - givenName
      type: object
      properties:
        aristocraticTitle:
          type: string
          description: e.g. Baron, Graf, Earl,…
        birthDate:
          type: string
          description: Birth date
          format: date-time
        countryOfBirth:
          type: string
          description: Country where the individual was born
        deathDate:
          type: string
          description: Date of death
          format: date-time
        familyName:
          type: string
          description: Contains the non-chosen or inherited name. Also known as last
            name in the Western context
        familyNamePrefix:
          type: string
          description: Family name prefix
        formattedName:
          type: string
          description: A fully formatted name in one string with all of its pieces
            in their proper place and all of the necessary punctuation. Useful for
            specific contexts (Chinese, Japanese, Korean,…)
        fullName:
          type: string
          description: Full name flatten (first, middle, and last names)
        gender:
          type: string
          description: Gender
        generation:
          type: string
          description: e.g.. Sr, Jr, III (the third),…
        givenName:
          type: string
          description: First name of the individual
        legalName:
          type: string
          description: Legal name or birth name (name one has for official purposes)
        location:
          type: string
          description: Temporary current location od the individual (may be used if
            the individual has approved its sharing)
        maritalStatus:
          type: string
          description: Marital status (married, divorced, widow ...)
        middleName:
          type: string
          description: Middles name or initial
        nationality:
          type: string
          description: Nationality
        placeOfBirth:
          type: string
          description: Reference to the place where the individual was born
        preferredGivenName:
          type: string
          description: 'Contains the chosen name by which the individual prefers to
            be addressed. Note: This name may be a name other than a given name, such
            as a nickname'
        title:
          type: string
          description: Useful for titles (aristocratic, social,...) Pr, Dr, Sir, ...
        contactMedium:
          type: array
          items:
            $ref: '#/components/schemas/ContactMedium'
        externalReference:
          type: array
          items:
            $ref: '#/components/schemas/ExternalReference'
        otherName:
          type: array
          items:
            $ref: '#/components/schemas/OtherNameIndividual'
        partyCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/Characteristic'
        relatedParty:
          type: array
          items:
            $ref: '#/components/schemas/RelatedParty'
        skill:
          type: array
          items:
            $ref: '#/components/schemas/Skill'
        status:
          $ref: '#/components/schemas/IndividualStateType'
      description: |-
        Individual represents a single human being (a man, woman or child). The individual can be a customer, an employee or any other person that the organization needs to store information about.
        Skipped properties: id,href
    Individual_Update:
      type: object
      properties:
        aristocraticTitle:
          type: string
          description: e.g. Baron, Graf, Earl,…
        birthDate:
          type: string
          description: Birth date
          format: date-time
        countryOfBirth:
          type: string
          description: Country where the individual was born
        deathDate:
          type: string
          description: Date of death
          format: date-time
        familyName:
          type: string
          description: Contains the non-chosen or inherited name. Also known as last
            name in the Western context
        familyNamePrefix:
          type: string
          description: Family name prefix
        formattedName:
          type: string
          description: A fully formatted name in one string with all of its pieces
            in their proper place and all of the necessary punctuation. Useful for
            specific contexts (Chinese, Japanese, Korean,…)
        fullName:
          type: string
          description: Full name flatten (first, middle, and last names)
        gender:
          type: string
          description: Gender
        generation:
          type: string
          description: e.g.. Sr, Jr, III (the third),…
        givenName:
          type: string
          description: First name of the individual
        legalName:
          type: string
          description: Legal name or birth name (name one has for official purposes)
        location:
          type: string
          description: Temporary current location od the individual (may be used if
            the individual has approved its sharing)
        maritalStatus:
          type: string
          description: Marital status (married, divorced, widow ...)
        middleName:
          type: string
          description: Middles name or initial
        nationality:
          type: string
          description: Nationality
        placeOfBirth:
          type: string
          description: Reference to the place where the individual was born
        preferredGivenName:
          type: string
          description: 'Contains the chosen name by which the individual prefers to
            be addressed. Note: This name may be a name other than a given name, such
            as a nickname'
        title:
          type: string
          description: Useful for titles (aristocratic, social,...) Pr, Dr, Sir, ...
        contactMedium:
          type: array
          items:
            $ref: '#/components/schemas/ContactMedium'
        externalReference:
          type: array
          items:
            $ref: '#/components/schemas/ExternalReference'
        otherName:
          type: array
          items:
            $ref: '#/components/schemas/OtherNameIndividual'
        partyCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/Characteristic'
        relatedParty:
          type: array
          items:
            $ref: '#/components/schemas/RelatedParty'
        skill:
          type: array
          items:
            $ref: '#/components/schemas/Skill'
        status:
          $ref: '#/components/schemas/IndividualStateType'
      description: |-
        Individual represents a single human being (a man, woman or child). The individual can be a customer, an employee or any other person that the organization needs to store information about.
        Skipped properties: id,href
    IndividualStateType:
      type: string
      description: Valid values for the lifecycle state of the individual
      enum:
      - initialized
      - validated
      - deceaded
    MediumCharacteristic:
      type: object
      properties:
        city:
          type: string
          description: The city
        contactType:
          type: string
          description: 'The type of contact, for example: phone number such as mobile,
            fixed home, fixed office. postal address such as shipping instalation…'
        country:
          type: string
          description: The country
        emailAddress:
          type: string
          description: Full email address in standard format
        faxNumber:
          type: string
          description: The fax number of the contact
        phoneNumber:
          type: string
          description: The primary phone number of the contact
        postCode:
          type: string
          description: Postcode
        socialNetworkId:
          type: string
          description: Identifier as a member of a social network
        stateOrProvince:
          type: string
          description: State or province
        street1:
          type: string
          description: Describes the street
        street2:
          type: string
          description: Complementary street description
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: Describes the contact medium characteristics that could be used
        to contact a party (an individual or an organization)
    OtherNameIndividual:
      type: object
      properties:
        aristocraticTitle:
          type: string
          description: e.g. Baron, Graf, Earl,…
        familyName:
          type: string
          description: Contains the non-chosen or inherited name. Also known as last
            name in the Western context
        familyNamePrefix:
          type: string
          description: Family name prefix
        formattedName:
          type: string
          description: . A fully formatted name in one string with all of its pieces
            in their proper place and all of the necessary punctuation. Useful for
            specific contexts (Chinese, Japanese, Korean,…)
        fullName:
          type: string
          description: Full name flatten (first, middle, and last names)
        generation:
          type: string
          description: e.g. Sr, Jr…
        givenName:
          type: string
          description: First name
        legalName:
          type: string
          description: Legal name or birth name (name one has for official purposes)
        middleName:
          type: string
          description: Middle name or initial
        preferredGivenName:
          type: string
          description: 'Contains the chosen name by which the person prefers to be
            addressed. Note: This name may be a name other than a given name, such
            as a nickname'
        title:
          type: string
          description: 'Use for titles (aristrocatic, social, ...): Pr, Dr, Sir,....'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: Keeps track of other names, for example the old name of a woman
        before marriage or an artist name.
    RelatedParty:
      required:
      - '@referredType'
      - id
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of a related entity.
        href:
          type: string
          description: Reference of the related entity.
        name:
          type: string
          description: Name of the related entity.
        role:
          type: string
          description: Role played by the related party
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Related Entity reference. A related party defines party or party
        role linked to a specific entity.
    Skill:
      type: object
      properties:
        comment:
          type: string
          description: A free text comment linked to the evaluation done
        evaluatedLevel:
          type: string
          description: Level of expertise in a skill evaluated for an individual
        skillCode:
          type: string
          description: Code of the skill
        skillName:
          type: string
          description: Name of the skill such as Java language,…
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: 'Skills evaluated for an individual with a level and possibly with
        a limited validity when an obsolescence is defined (Ex: the first-aid certificate
        first level is limited to one year and an update training is required each
        year to keep the level).'
    TimePeriod:
      type: object
      properties:
        endDateTime:
          type: string
          description: End of the time period, using IETC-RFC-3339 format
          format: date-time
        startDateTime:
          type: string
          description: Start of the time period, using IETC-RFC-3339 format. If you
            define a start, you must also define an end
          format: date-time
      description: A period of time, either as a deadline (endDateTime only) a startDateTime
        only, or both
    Error:
      required:
      - code
      - reason
      type: object
      properties:
        code:
          type: string
          description: Application relevant detail, defined in the API or a common
            list.
        reason:
          type: string
          description: Explanation of the reason for the error which can be shown
            to a client user.
        message:
          type: string
          description: More details and corrective actions related to the error which
            can be shown to a client user.
        status:
          type: string
          description: HTTP Error code extension
        referenceError:
          type: string
          description: URI of documentation describing the error.
          format: uri
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class.
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name.
      description: Used when an API throws an Error, typically with a HTTP error response-code
        (3xx, 4xx, 5xx)
  securitySchemes:
    OauthSecurity:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://oauth.simple.api/token
          scopes:
            party:individual:full: Full access to the party individual
            party:individual:read: Read access to the party individual
            party:individual:write: Write access (excluding delete) to the party individual
            party:individual:delete: Can delete party individual
            giga:cga:all-area-access: General Access Scope for Giga
